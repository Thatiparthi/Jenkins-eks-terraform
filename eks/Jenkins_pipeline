pipeline {
    agent any
    
    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION = "us-east-1"
    }
    stages {
        stage('checkout scm') {
            steps {
                // Check out source code from the repo
                script {
                    checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Thatiparthi/Jenkins-eks-terraform.git']])
                }
            }
        }
        stage('initialize terraform'){
            steps {
                //Initialize the terraform 
                script {
                    dir('eks') {
                        sh "terraform init"
                    }
                }
            }
        }
        stage('formating the terraform files'){
            steps {
                script {
                    dir('eks') {
                        sh "terraform fmt"
                    }
                }
            }
        }
        stage('vadlidate terraform files'){
            steps {
                script {
                    dir('eks') {
                        sh "terraform validate"
                    }
                }
            }
        }
        stage('previwing the terraform provisions') {
            steps {
                script {
                    dir('eks'){
                         sh "terraform plan"
                    }
                    input(message:"Are you sure to procced?" , ok: "procced")
            
                }
            }
        }
        stage('creating/destorying  EKS Cluster') {
            steps {
                script {
                    dir('eks') {
                        sh "terraform $action --auto-approve"
                    }
                }
            }
        }
        stage('deploying engnix applicvation'){
            steps {
                script{
                    dir('eks/Configurationfiles') {
                        sh "aws eks update-kubeconfig --name my-eks-cluster"
                        sh "kubectl apply -f deployment.yaml"
                        sh "kubectl apply -f service.yaml"
                    }
                }
            }
        }
    }
